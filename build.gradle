import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id "signing"
}

def getProperty = { property ->
    if (!project.hasProperty(property)) {
        throw new GradleException("${property} property must be set")
    }
    return project.property(property)
}

repositories {
    mavenCentral()
}

group = "com.pusher"
version = "1.3.3"
description = "Pusher HTTP Client"

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    withSourcesJar()
    withJavadocJar()
}

dependencies {
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'org.asynchttpclient:async-http-client:3.0.1'
    implementation 'com.google.code.gson:gson:2.8.9'
    testImplementation 'org.apache.httpcomponents:httpclient:4.5.13'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation 'org.jmock:jmock-junit5:2.12.0'
    testImplementation 'org.jmock:jmock-imposters:2.12.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
}

processResources {
    filter(ReplaceTokens, tokens: [
            version: project.version
    ])
}

javadoc {
    title "Pusher HTTP Java"
    options.linkSource = true
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes(
                'Created-By': 'Pusher',
                'Implementation-Vendor': 'Pusher',
                'Implementation-Title': 'Pusher HTTP Java',
                'Implementation-Version': version
        )
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'pusher-http-java'

            from components.java
            pom {
                name = 'Pusher HTTP Client'
                packaging = 'jar'
                artifactId = 'pusher-java-client'
                description = "This is a Java library for interacting with Pusher.com's HTTP API."
                url = 'http://github.com/pusher/pusher-http-java'
                scm {
                    connection = 'scm:git:git@github.com:pusher/pusher-http-java'
                    developerConnection = 'scm:git:git@github.com:pusher/pusher-http-java'
                    url = 'http://github.com/pusher/pusher-http-java'
                }
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://raw.github.com/pusher/pusher-http-java/master/LICENCE.txt'
                        distribution = 'https://raw.github.com/pusher/pusher-http-java/mvn-repo/'
                    }
                }
                organization {
                    name = 'Pusher'
                    url = 'http://pusher.com'
                }
                issueManagement {
                    system = 'GitHub'
                    url = 'https://github.com/pusher/pusher-http-java/issues'
                }
            }
        }
    }
    repositories {
        maven {
            def releaseRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith("SNAPSHOT") ? snapshotRepositoryUrl : releaseRepositoryUrl
            credentials {
                username = findProperty("maven.username") ?: ""
                password = findProperty("maven.password") ?: ""
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

test {
    useJUnitPlatform()

    testLogging {
        showStandardStreams = true
    }
}
